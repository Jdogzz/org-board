* TODO Add YouTube downloading support via `youtube-dl'
  :PROPERTIES:
  :Effort:   3h
  :END:
  Also requires rewriting the HTML to show the downloaded video.
** Other custom backends?
* CANCELLED Use the process sentinel to refresh the ~:Attachments:~ section 
  CLOSED: [2016-08-17 Wed 22:32]
  - State "CANCELLED"  from "TODO"       [2016-08-17 Wed 22:32]
  :PROPERTIES:
  :Effort:   15m
  :END:
  when the download has completed.

  Value of point or the current buffer may have changed in the
  meantime.  We will leave this up to the user.
* DONE Detect unsuccessful downloads?
  CLOSED: [2016-08-11 Thu 07:19]
** TODO Delete corresponding ARCHIVED_AT property if wget did not exit
   properly and the directory is empty.
* TODO Fix unsavory list splicing via append/apply
  See org-board-wget-call.
* DONE Add customization options
  CLOSED: [2016-08-17 Wed 22:24]
  - State "DONE"       from "TODO"       [2016-08-17 Wed 22:24]
** DONE Show/hide wget buffer.
   CLOSED: [2016-08-17 Wed 22:24]
   - State "DONE"       from "TODO"       [2016-08-17 Wed 22:24]
** DONE Default wget flags.
* Hooks
** TODO (Preprocessing) Add hook list for before downloading
** TODO (Postprocessing) Use a process filter to catch downloaded links and pass to hook functions later
* DONE Show ~which~ org-board process finished
  CLOSED: [2016-08-17 Wed 22:24]
  - State "DONE"       from "TODO"       [2016-08-17 Wed 22:24]
  Maybe show which org entry it belonged to?
* DONE Allow deletion of entries
  CLOSED: [2016-08-17 Wed 22:25]
  - State "DONE"       from "TODO"       [2016-08-17 Wed 22:25]
* DONE Provide org-board
  CLOSED: [2016-08-17 Wed 22:23]
  - State "DONE"       from "TODO"       [2016-08-17 Wed 22:23]
* DONE Quickly open .html page
  CLOSED: [2016-08-18 Thu 14:56]
  - State "DONE"       from "TODO"       [2016-08-18 Thu 14:56]
  CLOCK: [2016-08-18 Thu 13:34]--[2016-08-18 Thu 14:55] =>  1:21
  CLOCK: [2016-08-17 Wed 22:33]--[2016-08-17 Wed 23:05] =>  0:32
  At the moment, a link is provived in the ARCHIVED_AT property to the
  root archival folder.  This is correct, but it would be better if
  there was a function to recurse through the directory structure and
  offer up all .html files for opening.

  Use something like `find' in dired.

  Steps:
  1) Take the most recent ARCHIVED_AT folder.
  2) Run something like `find . -name "*.html"'.  If none, open the
     folder; if one, open it; if several, offer them up for choice.
     With a prefix argument open in Emacs.
* DONE Quick set of URL property, then archive immediately
  CLOSED: [2016-08-18 Thu 15:34]
  - State "DONE"       from "TODO"       [2016-08-18 Thu 15:34]
  CLOCK: [2016-08-18 Thu 15:03]--[2016-08-18 Thu 15:34] =>  0:31
  In the manual there is "org-set-effort" which apparently sets a
  property interactively.  Use something similar, then start the
  archival process immediately with a call to org-board-archive.
* DONE Add support for multiple URLs
  - State "DONE"       from "TODO"       [2016-08-20 Sat 12:55]
* CANCELLED Add support for quotes in arguments
  - State "CANCELLED"  from "TODO"       [2016-08-24 Wed 22:00] \\
    Does not seem like this will work.  Use single quotes instead.
  I cannot get --header="Accept: text/html" to work, for example.
* DONE Add diffing capability between archives
  - State "DONE"       from "TODO"       [2016-08-24 Wed 22:00]
    
  Via "ztree".
* TODO Add support for deleting just one archive
* TODO Allow searching for *.htm files instead of just *.html
  How could this be made smarter?  Maybe if there are no htm or html
  files just show all files (using the find-lisp library)?
* TODO Log the command used by org-board in the archival root
* TODO Better folder date format display
  - State "TODO"       from ""           [2016-08-24 Wed 22:22]
  The format for a date currently looks like 2016-08-24-22-23-20.
  Ideally it should look as much like an Org date as possible (without
  the spaces as they are a nuisance in filenames).  Maybe they could
  be fontified somehow?


* Long-term
** TODO Annotation
   With a captured page there should be some way to annotate it.
   Possibly JS in the browser, or possibly via links from a dedicated
   org annotation file?
